for(int j= i; j<cursor->size -1;j++){
        cursor->key[j]= cursor->key[j+1];
      }
      cursor->size -= 1;
      for(int j =0;j<parent->size;j++){
        if(parent->ptr[j]== cursor){
          //we now check the left sibiling
          if(j>0 && j<parent->size){//avoid the condition that the leaf page has no left sibling or right sibiling
            //we can check left sibiling
            if(parent->ptr[j-1]->size> MAX/2){
              int swap = parent->ptr[j-1]->key[parent->ptr[j-1]->size];
              parent->ptr[j-1]->size -=1;
              cursor->size ++;
              for(int l= 0; l<cursor->size -1;l++){
                cursor->key[l+1]= cursor->key[l];
              cursor->key[0] = swap;
              parent->key[j]=swap;




              while(sibL->size<MAX){
            sibL->size++;
            sibL->key[sibL->size] = cursor->key[0];
            for(int l =0; l<sibR->size -1; l++)
              sibR->key[l]=sibR->key[l+1];
            sibR->size --;
          }
          while(cursor->size>0){
            sibR->size++;
            for(int l =0; l<sibR->size -1; l++)
              sibR->key[l+1]=sibR->key[l];
            
          }